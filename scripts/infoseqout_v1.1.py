#! /usr/bin/env python
#coding: utf-8

import sys,os
import operator
import pandas as pd
import glob
import argparse

helptext="""
This script is to get information about GC and lenght of scaffolds for future filtering
Authors: David Peris UW-Madison, Dept Genetics & IATA-CSIC
"""

parser = argparse.ArgumentParser(description=helptext,formatter_class=argparse.RawTextHelpFormatter)
#parser.add_argument("-i","--input", help="A folder where assemblies are stored", type = str, default = None)
parser.add_argument("-f","--InputFile", help="A file with the name of the assembly to be explored", type = str, default = None)
parser.add_argument("-o","--OutputFolder", help="A folder where the output result will be stored", type = str, default = ".")

args = parser.parse_args()

#input_folder = args.input
#input_file = args.InputFile
output_folder = args.OutputFolder + "/"

if not os.path.exists(output_folder):
	os.makedirs(output_folder)

list_of_protocols = open(args.InputFile, 'r')

for protocol in list_of_protocols:
	assembly_path = protocol.strip()
	protocol_name = assembly_path.split('/')[-1].split('.')[0]
	#assembly_path = input_folder + protocol.strip()
	EMBOS_cmdA = 'infoseq ' + assembly_path + ' --auto -only -name -length -pgc > ' + output_folder + protocol_name + '_EMBOSS.txt'
	print("EMBOS_cmdA:"+EMBOS_cmdA)
	os.system(EMBOS_cmdA)

list_of_results = glob.glob(output_folder+'*EMBOSS*')

for results in list_of_results:
	result = open(results)
	conv_name = results.split('/')[-1].split('.')[0]
	conv_file = open(output_folder+conv_name+'_converted.txt','w')
	for line in result:
		line = '\t'.join(line.split())
		conv_file.write(line+'\n')
	conv_file.close()
	sort_file_name = output_folder+conv_name+'_sorted.txt'
	df_result = pd.read_csv(output_folder+conv_name+'_converted.txt', sep='\t') #To read a tabulated data frame
	df_result = df_result.sort_values(['%GC'], ascending=[True]) #To sort from the lowest to the highest WARNING: FutureWarning: sort(columns=....) is deprecated, use sort_values(by=.....)
	df_result.to_csv(sort_file_name, index=False, sep='\t')#Remove the index generated by pandas and separate columns by tabs. The header is maintained

print "Done!" 
